; sicp 1.10

(A 1 10)
; 1024

(A 2 4)
; 65536

(A 3 3)
; 65536

(define (f n) (A 0 n))
; (A 0 n)
; (* 2 n)
;   => f = 2n

(define (g n) (A 1 n))
; 1) if n=0
;   (A 1 0)
;   0
;
; 2) if n=1
;   (A 1 1)
;   2
;
; 3) if n>=2
;   (A 1 n)
;   (A (- 1 1) (A x (- n 1)))
;   (A 0 (A x (- n 1)))
;   (* 2 (A x (- n 1))) この展開がn回繰り返される
;
;   => g = 2^n

(define (h n) (A 2 n))
; 1) if n=0
;   (A 2 0)
;   0
;
; 2) if n=1
;   (A 2 1)
;   2
;
; 3) if n>=2
;   (A 2 n)
;   (A (- 2 1) (A x (- n 1)))
;   (A 1 (A 2 (- n 1)))
;     3.1) if n=2
;       (A 2 (- n 1))
;       (A 2 1)
;       2
;         (A 1 2)
;         2^2
;     3.2) if n=3
;       (A 2 (- n 1))
;       (A 2 2)
;       (A 1 (A 2 1))
;       (A 1 2^2)
;       2^(2^2)
;
;   => h = 2^(2^(2^...)) n回繰り返し(n=0の時は0)
;
